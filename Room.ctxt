#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @author\ Luis\ Monterroso\r\n\ @version\ 2018.11.05\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=
comment10.target=java.lang.String\ getLongDescription()
comment10.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment11.params=
comment11.target=java.lang.String\ getItemString()
comment11.text=\r\n\ Prints\ out\ all\ the\ items\ in\ the\ room\ by\ concatonating\ them\ into\ one\ string.\ \r\n\ @return\ a\ string\ of\ all\ the\ items\ in\ the\ room.\r\n
comment12.params=
comment12.target=java.lang.String\ getExitString()
comment12.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment13.params=direction
comment13.target=Room\ getExit(java.lang.String)
comment13.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment14.params=player
comment14.target=boolean\ getLocked(Player)
comment14.text=\r\n\ checks\ if\ the\ player\ has\ the\ key\ and\ if\ they\ do\ return\ true\ otherwise\ return\ the\ value\ \r\n\ of\ locked,\ (false\ means\ the\ rooom\ is\ open,\ true\ means\ the\ room\ is\ locked)\r\n\ @return\ true\ or\ false,\ first\ based\ on\ if\ there\ is\ a\ matching\ key\ then\ if\ the\ rooom\ is\ locked\ if\ the\ first\ tesst\ fails.\r\n
comment15.params=check
comment15.target=void\ setTrapDoor(boolean)
comment15.text=\r\n\ sets\ whether\ or\ not\ the\ room\ is\ a\ trap\ door\r\n\ @param\ true\ or\ false\ value\ to\ be\ passed\ on\ to\ the\ room's\ trapDoor\ field\r\n
comment16.params=
comment16.target=boolean\ getTrapDoor()
comment16.text=\r\n\ checks\ if\ the\ room\ is\ a\ trapDoor\ or\ not\r\n@return\ the\ value\ of\ trapDoor\ \r\n
comment17.params=
comment17.target=boolean\ giveNPC()
comment17.text=\r\n\ checks\ if\ there\ is\ an\ NPC\ to\ give\ something\ to\ and\ reurns\ true\ or\ false\r\n\ @return\ true\ if\ there\ is\ an\ NPC,\ false\ if\ there\ isn't.\r\n
comment18.params=
comment18.target=NPC\ getNPC()
comment18.text=\r\n\ get\ the\ Rooms\ NPC\ \r\n\ @return\ the\ NPC\ in\ the\ stranger\ field\ of\ the\ room\r\n
comment19.params=newStranger
comment19.target=void\ setNPC(NPC)
comment19.text=\r\n\ sets\ the\ NPC\ for\ the\ room\r\n\ @param\ the\ NPC\ to\ be\ assigned\ to\ the\ rooms\ stranger\ field.\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment3.params=newItem
comment3.target=void\ addItem(Item)
comment3.text=\r\n\ adds\ an\ item\ to\ the\ room\r\n
comment4.params=newItem
comment4.target=void\ setKey(java.lang.String)
comment4.text=\r\n\ sets\ a\ key\ to\ a\ room\ and\ designates\ the\ room\ as\ locked\r\n
comment5.params=
comment5.target=java.lang.String\ getKey()
comment5.text=\r\n\ returns\ the\ description\ of\ the\ key\r\n\ @return\ the\ description\ field\ of\ the\ key\r\n
comment6.params=delItem
comment6.target=void\ removeItem(Item)
comment6.text=\r\n\ removes\ an\ item\ from\ a\ room\r\n
comment7.params=itemSearch
comment7.target=Item\ getItem(java.lang.String)
comment7.text=\r\n\ returns\ an\ item\ in\ the\ room\r\n\ @param\ the\ string\ to\ be\ used\ to\ search\ for\ your\ item\r\n\ @return\ the\ item\ you\ are\ looking\ for\r\n
comment8.params=itemSearch
comment8.target=boolean\ findItem(java.lang.String)
comment8.text=\r\n\ @param\ string\ being\ used\ to\ look\ for\ certain\ item\r\n\ @return\ true\ if\ a\ match\ is\ found\ and\ false\ if\ one\ is\ not\r\n
comment9.params=
comment9.target=java.lang.String\ getShortDescription()
comment9.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
numComments=20
